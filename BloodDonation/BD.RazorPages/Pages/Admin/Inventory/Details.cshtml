@page "/admin/inventory/details/{id:int?}"
@model BD.RazorPages.Pages.Admin.Inventory.DetailsModel
@{
    ViewData["Title"] = "Blood Inventory Details";
    
    // Define styling classes similar to BloodUnits page
    var statusClasses = new Dictionary<string, string>
    {
        { "Available", "bg-green-100 text-green-800" },
        { "Reserved", "bg-blue-100 text-blue-800" },
        { "Expired", "bg-red-100 text-red-800" },
        { "Low Stock", "bg-yellow-100 text-yellow-800" },
        { "Out of Stock", "bg-gray-200 text-gray-800" }
    };
    
    var componentClasses = new Dictionary<string, string>
    {
        { "Red Blood Cells", "bg-red-100 text-red-800" },
        { "White Blood Cells", "bg-indigo-100 text-indigo-800" },
        { "Plasma", "bg-yellow-100 text-yellow-800" },
        { "Platelets", "bg-green-100 text-green-800" }
    };
    
    var bloodTypeClasses = new Dictionary<string, string>
    {
        { "O+",  "bg-red-100 text-red-800" },
        { "A+",  "bg-blue-100 text-blue-800" },
        { "B+",  "bg-green-100 text-green-800" },
        { "AB+", "bg-yellow-100 text-yellow-800" },
        { "O-",  "bg-gray-100 text-gray-800" },
        { "A-",  "bg-blue-100 text-blue-800" },
        { "B-",  "bg-yellow-100 text-yellow-800" },
        { "AB-", "bg-green-100 text-green-800" }
    };
    
    var defaultClass = "bg-gray-200 text-gray-500";
}

<div class="max-w-6xl mx-auto space-y-6">
    <!-- Page Header -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div class="flex items-center justify-between">
            <div class="flex items-center space-x-4">
                <div class="flex-shrink-0">
                    <div class="w-16 h-16 @(bloodTypeClasses.GetValueOrDefault(Model.BloodInventory.BloodType, defaultClass)) rounded-full flex items-center justify-center">
                        <span class="text-xl font-bold">@Model.BloodInventory.BloodType</span>
                    </div>
                </div>
                <div>
                    <h1 class="text-3xl font-bold text-gray-900">Blood Unit #@Model.BloodInventory.InventoryId</h1>
                    <p class="text-gray-600">@Model.BloodInventory.ComponentType • @Model.BloodInventory.Facility.Name</p>
                </div>
            </div>
            <div class="flex space-x-3">
                <a asp-page="./Edit" asp-route-id="@Model.BloodInventory.InventoryId" 
                   class="inline-flex items-center px-4 py-2 border border-yellow-300 rounded-md shadow-sm text-sm font-medium text-yellow-700 bg-yellow-50 hover:bg-yellow-100">
                    <i class="fas fa-edit mr-2"></i>Edit
                </a>
                <a asp-page="./BloodUnits" 
                   class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
                    <i class="fas fa-arrow-left mr-2"></i>Back to Inventory
                </a>
            </div>
        </div>
    </div>

    <!-- Main Content Grid -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <!-- Left Column - Main Information -->
        <div class="lg:col-span-2 space-y-6">
            <!-- Basic Information Card -->
            <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                    <i class="fas fa-info-circle text-blue-500 mr-2"></i>
                    Basic Information
                </h3>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-500 mb-1">Blood Type</label>
                            <span class="inline-flex px-3 py-1 text-sm font-semibold rounded-full @(bloodTypeClasses.GetValueOrDefault(Model.BloodInventory.BloodType, defaultClass))">
                                @Model.BloodInventory.BloodType
                            </span>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-500 mb-1">Component Type</label>
                            <span class="inline-flex px-3 py-1 text-sm font-semibold rounded-full @(componentClasses.GetValueOrDefault(Model.BloodInventory.ComponentType, defaultClass))">
                                @Model.BloodInventory.ComponentType
                            </span>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-500 mb-1">Volume</label>
                            <div class="flex items-center">
                                <span class="text-2xl font-bold text-gray-900">@Model.BloodInventory.Amount</span>
                                <span class="text-sm text-gray-500 ml-2">units</span>
                            </div>
                        </div>
                    </div>
                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-500 mb-1">Status</label>
                            <span class="inline-flex px-3 py-1 text-sm font-semibold rounded-full @(statusClasses.GetValueOrDefault(Model.BloodInventory.StatusBloodInventory.StatusName, defaultClass))">
                                @Model.BloodInventory.StatusBloodInventory.StatusName
                            </span>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-500 mb-1">Expiry Status</label>
                            <span class="inline-flex px-3 py-1 text-sm font-semibold rounded-full @Model.GetExpiryStatusClass()">
                                @Model.GetExpiryStatus()
                            </span>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-500 mb-1">Inventory ID</label>
                            <span class="text-lg font-mono text-gray-900">#@Model.BloodInventory.InventoryId</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Facility Information Card -->
            <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                    <i class="fas fa-hospital text-green-500 mr-2"></i>
                    Medical Facility
                </h3>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="space-y-3">
                        <div>
                            <label class="block text-sm font-medium text-gray-500 mb-1">Facility Name</label>
                            <p class="text-lg font-semibold text-gray-900">@Model.BloodInventory.Facility.Name</p>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-500 mb-1">Address</label>
                            <p class="text-sm text-gray-700 flex items-start">
                                <i class="fas fa-map-marker-alt text-gray-400 mt-1 mr-2"></i>
                                @Model.BloodInventory.Facility.Address
                            </p>
                        </div>
                    </div>
                    <div class="space-y-3">
                        @if (!string.IsNullOrEmpty(Model.BloodInventory.Facility.Phone))
                        {
                            <div>
                                <label class="block text-sm font-medium text-gray-500 mb-1">Phone</label>
                                <p class="text-sm text-gray-700 flex items-center">
                                    <i class="fas fa-phone text-gray-400 mr-2"></i>
                                    @Model.BloodInventory.Facility.Phone
                                </p>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(Model.BloodInventory.Facility.Email))
                        {
                            <div>
                                <label class="block text-sm font-medium text-gray-500 mb-1">Email</label>
                                <p class="text-sm text-gray-700 flex items-center">
                                    <i class="fas fa-envelope text-gray-400 mr-2"></i>
                                    @Model.BloodInventory.Facility.Email
                                </p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Right Column - Timeline and Actions -->
        <div class="space-y-6">
            <!-- Quick Stats Card -->
            <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                    <i class="fas fa-chart-line text-purple-500 mr-2"></i>
                    Quick Stats
                </h3>
                <div class="space-y-4">
                    <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                        <div class="flex items-center">
                            <i class="fas fa-calendar-alt text-blue-500 mr-3"></i>
                            <span class="text-sm font-medium text-gray-700">Added</span>
                        </div>
                        <span class="text-sm text-gray-600">@Model.GetLastUpdatedInfo()</span>
                    </div>
                    <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                        <div class="flex items-center">
                            <i class="fas fa-clock text-orange-500 mr-3"></i>
                            <span class="text-sm font-medium text-gray-700">Expires</span>
                        </div>
                        <span class="text-sm text-gray-600">@Model.BloodInventory.ExpiredDate.ToString("MMM dd, yyyy")</span>
                    </div>
                    <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                        <div class="flex items-center">
                            <i class="fas fa-flask text-red-500 mr-3"></i>
                            <span class="text-sm font-medium text-gray-700">Volume</span>
                        </div>
                        <span class="text-sm font-bold text-gray-900">@Model.BloodInventory.Amount units</span>
                    </div>
                </div>
            </div>

            <!-- Actions Card -->
            <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                    <i class="fas fa-tools text-gray-500 mr-2"></i>
                    Actions
                </h3>
                <div class="space-y-3">
                    <a asp-page="./Edit" asp-route-id="@Model.BloodInventory.InventoryId" 
                       class="w-full inline-flex items-center justify-center px-4 py-2 border border-yellow-300 rounded-md shadow-sm text-sm font-medium text-yellow-700 bg-yellow-50 hover:bg-yellow-100 transition-colors">
                        <i class="fas fa-edit mr-2"></i>Edit Details
                    </a>
                    <button class="w-full inline-flex items-center justify-center px-4 py-2 border border-blue-300 rounded-md shadow-sm text-sm font-medium text-blue-700 bg-blue-50 hover:bg-blue-100 transition-colors">
                        <i class="fas fa-exchange-alt mr-2"></i>Transfer Unit
                    </button>
                  
                    <button class="w-full inline-flex items-center justify-center px-4 py-2 border border-red-300 rounded-md shadow-sm text-sm font-medium text-red-700 bg-red-50 hover:bg-red-100 transition-colors"
                            onclick="openDisposeModal(@Model.BloodInventory.InventoryId, '@Model.BloodInventory.BloodType', '@Model.BloodInventory.ComponentType', @Model.BloodInventory.Amount)">
                        <i class="fas fa-trash mr-2"></i>Dispose Unit
                    </button>
                </div>
            </div>

            <!-- System Information Card -->
            <div class="bg-gray-50 rounded-lg border border-gray-200 p-6">
                <h3 class="text-lg font-semibold text-gray-700 mb-4 flex items-center">
                    <i class="fas fa-cog text-gray-500 mr-2"></i>
                    System Information
                </h3>
                <div class="space-y-3 text-sm">
                    <div class="flex justify-between">
                        <span class="text-gray-600">Inventory ID:</span>
                        <span class="font-mono text-gray-900">#@Model.BloodInventory.InventoryId</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-600">Last Updated:</span>
                        <span class="text-gray-900">@(Model.BloodInventory.LastUpdated?.ToString("MMM dd, yyyy HH:mm") ?? "N/A")</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-600">Status ID:</span>
                        <span class="font-mono text-gray-900">#@Model.BloodInventory.StatusBloodInventory.StatusInventoryId</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-600">Facility ID:</span>
                        <span class="font-mono text-gray-900">#@Model.BloodInventory.Facility.FacilityId</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Additional Information Section -->
    @if (!string.IsNullOrEmpty(Model.BloodInventory.Facility.Description))
    {
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                <i class="fas fa-clipboard-list text-indigo-500 mr-2"></i>
                Additional Information
            </h3>
            <div class="prose max-w-none">
                <p class="text-gray-700">@Model.BloodInventory.Facility.Description</p>
            </div>
        </div>
    }
</div>

<!-- Dispose Confirmation Modal -->
<div id="disposeModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3 text-center">
            <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100 mb-4">
                <i class="fas fa-exclamation-triangle text-red-600 text-xl"></i>
            </div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Confirm Blood Unit Disposal</h3>
            <div class="mt-2 px-7 py-3">
                <p class="text-sm text-gray-500 mb-4">
                    Are you sure you want to dispose this blood unit? This action will mark the unit as disposed and cannot be undone.
                </p>
                <div class="bg-gray-50 rounded-lg p-3 mb-4">
                    <div class="text-sm">
                        <div class="flex justify-between mb-1">
                            <span class="font-medium text-gray-700">Unit ID:</span>
                            <span id="modalUnitId" class="text-gray-900"></span>
                        </div>
                        <div class="flex justify-between mb-1">
                            <span class="font-medium text-gray-700">Blood Type:</span>
                            <span id="modalBloodType" class="text-gray-900"></span>
                        </div>
                        <div class="flex justify-between mb-1">
                            <span class="font-medium text-gray-700">Component:</span>
                            <span id="modalComponent" class="text-gray-900"></span>
                        </div>
                        <div class="flex justify-between">
                            <span class="font-medium text-gray-700">Amount:</span>
                            <span id="modalAmount" class="text-gray-900"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="flex justify-center space-x-3">
                <button id="cancelDisposeBtn" 
                        class="px-4 py-2 bg-gray-300 text-gray-700 text-sm font-medium rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-300">
                    Cancel
                </button>
                <form id="disposeForm" method="post" asp-page-handler="Dispose" class="inline">
                    <input type="hidden" id="disposeUnitId" name="id" value="">
                    <button type="submit" 
                            class="px-4 py-2 bg-red-600 text-white text-sm font-medium rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500">
                        <i class="fas fa-trash mr-2"></i>Dispose Unit
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Add smooth scrolling and interactive features
        document.addEventListener('DOMContentLoaded', function() {
            // Add click handlers for action buttons
            const transferBtn = document.querySelector('button:has(.fa-exchange-alt)');
            const markUsedBtn = document.querySelector('button:has(.fa-check-circle)');

            if (transferBtn) {
                transferBtn.addEventListener('click', function() {
                    // Placeholder for transfer functionality
                    alert('Transfer functionality will be implemented here');
                });
            }

            if (markUsedBtn) {
                markUsedBtn.addEventListener('click', function() {
                    // Placeholder for mark as used functionality
                    alert('Mark as used functionality will be implemented here');
                });
            }

            // Add animation to cards on load
            const cards = document.querySelectorAll('.bg-white');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    card.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });

        // Dispose Modal Functions
        function openDisposeModal(unitId, bloodType, componentType, amount) {
            // Set modal content
            document.getElementById('modalUnitId').textContent = '#' + unitId;
            document.getElementById('modalBloodType').textContent = bloodType;
            document.getElementById('modalComponent').textContent = componentType;
            document.getElementById('modalAmount').textContent = amount + ' units';
            document.getElementById('disposeUnitId').value = unitId;
            
            // Show modal
            document.getElementById('disposeModal').classList.remove('hidden');
            document.body.style.overflow = 'hidden'; // Prevent background scrolling
        }

        function closeDisposeModal() {
            document.getElementById('disposeModal').classList.add('hidden');
            document.body.style.overflow = 'auto'; // Restore scrolling
        }

        // Modal event listeners
        document.addEventListener('DOMContentLoaded', function() {
            const modal = document.getElementById('disposeModal');
            const cancelBtn = document.getElementById('cancelDisposeBtn');
            
            // Close modal when clicking cancel button
            if (cancelBtn) {
                cancelBtn.addEventListener('click', closeDisposeModal);
            }
            
            // Close modal when clicking outside the modal content
            if (modal) {
                modal.addEventListener('click', function(e) {
                    if (e.target === modal) {
                        closeDisposeModal();
                    }
                });
            }
            
            // Close modal with Escape key
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
                    closeDisposeModal();
                }
            });
            
            // Add loading state to dispose form
            const disposeForm = document.getElementById('disposeForm');
            if (disposeForm) {
                disposeForm.addEventListener('submit', function() {
                    const submitBtn = disposeForm.querySelector('button[type="submit"]');
                    if (submitBtn) {
                        submitBtn.disabled = true;
                        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Disposing...';
                    }
                });
            }
        });
    </script>
}

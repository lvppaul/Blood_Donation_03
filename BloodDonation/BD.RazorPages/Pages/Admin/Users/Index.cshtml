@page "/admin/users"
@model BD.RazorPages.Pages.Admin.Users.IndexModel
@{
    ViewData["Title"] = "Manage Users";
}

@if (TempData["Success"] != null)
{
    <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4" role="alert">
        <span class="block sm:inline">@TempData["Success"]</span>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4" role="alert">
        <span class="block sm:inline">@TempData["Error"]</span>
    </div>
}

<div class="space-y-6">
    <!-- Page Header -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div class="flex items-center justify-between">
            <div>
                <h2 class="text-3xl font-bold text-gray-900 mb-2">User Management</h2>
                <p class="text-gray-600">Manage all users in the BloodConnect system</p>
            </div>
            <a href="/Admin/Users/AddUser" class="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors inline-flex items-center">
                <i class="fas fa-plus mr-2"></i>Add New User
            </a>
        </div>
    </div>

    <!-- User Statistics -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-blue-100">
                    <i class="fas fa-users text-xl text-blue-600"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm text-gray-600">Total Users</p>
                    <p class="text-2xl font-bold text-gray-900">@Model.Statistics.TotalUsers</p>
                </div>
            </div>
        </div>
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-green-100">
                    <i class="fas fa-hand-holding-heart text-xl text-green-600"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm text-gray-600">Members</p>
                    <p class="text-2xl font-bold text-gray-900">@Model.Statistics.MemberCount</p>
                </div>
            </div>
        </div>
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-purple-100">
                    <i class="fas fa-user-tie text-xl text-purple-600"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm text-gray-600">Staff</p>
                    <p class="text-2xl font-bold text-gray-900">@Model.Statistics.StaffCount</p>
                </div>
            </div>
        </div>
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-red-100">
                    <i class="fas fa-user-shield text-xl text-red-600"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm text-gray-600">Admins</p>
                    <p class="text-2xl font-bold text-gray-900">@Model.Statistics.AdminsCount</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters and Search -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <form method="get">
            <div class="flex flex-col md:flex-row gap-4 items-center justify-between">
                <div class="flex flex-col md:flex-row gap-4 flex-1">
                    <div class="relative">
                        <i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                        <input type="text" name="SearchTerm" value="@Model.SearchTerm" placeholder="Search users..." class="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-red-500">
                    </div>
                    <select name="SelectedRole" class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-red-500">
                        <option value="">All Roles</option>
                        @foreach (var role in Model.Roles)
                        {
                            <option value="@role" selected="@(Model.SelectedRole == role)">@role</option>
                        }
                    </select>

                    <button type="submit" class="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors">
                        <i class="fas fa-search mr-2"></i>Search
                    </button>
                </div>
                <button type="button" class="bg-gray-100 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-200 transition-colors">
                    <i class="fas fa-download mr-2"></i>Export
                </button>
            </div>
        </form>
    </div>

    <!-- Users Table -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Blood Type</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Joined</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @if (Model.Users?.Any() == true)
                    {
                        @foreach (var user in Model.Users)
                        {
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="h-10 w-10 @(Model.GetRoleColorClass(user.Role.Name)) rounded-full flex items-center justify-center">
                                            <span class="@(Model.GetRoleTextColorClass(user.Role.Name)) font-medium">@(Model.GetInitials(user.Name))</span>
                                        </div>
                                        <div class="ml-4">
                                            <div class="text-sm font-medium text-gray-900">@user.Name</div>
                                            <div class="text-sm text-gray-500">@user.Email</div>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full @(Model.GetRoleBadgeClass(user.Role.Name))">@user.Role.Name</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@user.BloodType</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    @(user.CreatedAt?.ToString("MMM dd, yyyy") ?? "N/A")
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <div class="flex space-x-2">
                                        <a href="/admin/users/edit/@user.UserId" class="text-blue-600 hover:text-blue-900">Edit</a>
                                        <form method="post" asp-page-handler="Delete" asp-route-id="@user.UserId" style="display: inline;">
                                            <button type="submit" class="text-red-600 hover:text-red-900" 
                                                    onclick="return confirm('Are you sure you want to delete this user?')">Delete</button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="px-6 py-4 text-center text-gray-500">
                                No users found matching your criteria.
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        
        <!-- Pagination -->
        <div class="bg-gray-50 px-6 py-3 flex items-center justify-between border-t border-gray-200">
            <div class="flex-1 flex justify-between sm:hidden">
                @if (Model.CurrentPage > 1)
                {
                    <a href="@Model.GetPageUrl(Model.CurrentPage - 1)" class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">Previous</a>
                }
                else
                {
                    <span class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-400 bg-gray-100 cursor-not-allowed">Previous</span>
                }
                
                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <a href="@Model.GetPageUrl(Model.CurrentPage + 1)" class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">Next</a>
                }
                else
                {
                    <span class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-400 bg-gray-100 cursor-not-allowed">Next</span>
                }
            </div>
            <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                <div>
                    <p class="text-sm text-gray-700">
                        Showing <span class="font-medium">@(Model.TotalUsers == 0 ? 0 : (Model.CurrentPage - 1) * Model.PageSize + 1)</span> 
                        to <span class="font-medium">@Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalUsers)</span> 
                        of <span class="font-medium">@Model.TotalUsers</span> results
                    </p>
                </div>
                <div>
                    <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px">
                        @if (Model.CurrentPage > 1)
                        {
                            <a href="@Model.GetPageUrl(Model.CurrentPage - 1)" class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        }
                        else
                        {
                            <span class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-gray-100 text-sm font-medium text-gray-400 cursor-not-allowed">
                                <i class="fas fa-chevron-left"></i>
                            </span>
                        }
                        
                        @{
                            var startPage = Math.Max(1, Model.CurrentPage - 2);
                            var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                        }
                        
                        @if (startPage > 1)
                        {
                            <a href="@Model.GetPageUrl(1)" class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">1</a>
                            @if (startPage > 2)
                            {
                                <span class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700">...</span>
                            }
                        }
                        
                        @for (int i = startPage; i <= endPage; i++)
                        {
                            @if (i == Model.CurrentPage)
                            {
                                <span class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-red-50 text-sm font-medium text-red-600">@i</span>
                            }
                            else
                            {
                                <a href="@Model.GetPageUrl(i)" class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">@i</a>
                            }
                        }
                        
                        @if (endPage < Model.TotalPages)
                        {
                            @if (endPage < Model.TotalPages - 1)
                            {
                                <span class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700">...</span>
                            }
                            <a href="@Model.GetPageUrl(Model.TotalPages)" class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">@Model.TotalPages</a>
                        }
                        
                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <a href="@Model.GetPageUrl(Model.CurrentPage + 1)" class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        }
                        else
                        {
                            <span class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-gray-100 text-sm font-medium text-gray-400 cursor-not-allowed">
                                <i class="fas fa-chevron-right"></i>
                            </span>
                        }
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

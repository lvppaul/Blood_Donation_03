@page "/blog/{id:int}"
@model BD.RazorPages.Pages.Public.BlogPostModel
@{
    ViewData["Title"] = Model.BlogPost?.Title ?? "Blog Post";
    var role = HttpContext.Session.GetString("UserRole") ?? "guest"; 
}

@if (TempData["Error"] != null)
{
    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4" role="alert">
        <span class="block sm:inline">@TempData["Error"]</span>
    </div>
}

@if (Model.BlogPost != null)
{
    <div class="py-3 max-w-4xl mx-auto space-y-6">
        <!-- Navigation Breadcrumb -->
        <nav class="flex items-center space-x-2 text-sm text-gray-600">
            <a href="/blog" class="hover:text-red-600">Blog</a>
            <i class="fas fa-chevron-right text-gray-400"></i>
            @if (!string.IsNullOrEmpty(Model.BlogPost.Category))
            {
                <span class="capitalize">@Model.BlogPost.Category</span>
                <i class="fas fa-chevron-right text-gray-400"></i>
            }
            <span class="text-gray-900 font-medium">@Model.BlogPost.Title</span>
        </nav>

        <!-- Main Article -->
        <article class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
            <!-- Article Header -->
            <div class="p-8">
                <div class="flex items-center justify-between mb-6">
                    <div class="flex items-center space-x-3">
                        @if (!string.IsNullOrEmpty(Model.BlogPost.Category))
                        {
                            <span class="px-3 py-1 text-sm font-medium rounded-full
                                @(Model.BlogPost.Category == "Health" ? "bg-green-100 text-green-800" :
                                  Model.BlogPost.Category == "Education" ? "bg-blue-100 text-blue-800" :
                                  Model.BlogPost.Category == "Emergency" ? "bg-red-100 text-red-800" :
                                  Model.BlogPost.Category == "Guidelines" ? "bg-yellow-100 text-yellow-800" :
                                  Model.BlogPost.Category == "Medical" ? "bg-purple-100 text-purple-800" :
                                  "bg-gray-100 text-gray-800")">
                                <i class="fas fa-tag mr-1"></i>@Model.BlogPost.Category
                            </span>
                        }
                        @if (Model.BlogPost.IsDocument == true)
                        {
                            <span class="px-3 py-1 text-sm font-medium bg-indigo-100 text-indigo-800 rounded-full">
                                <i class="fas fa-file-alt mr-1"></i>Official Document
                            </span>
                        }
                    </div>
                    
                    <a href="/blog" 
                       class="text-gray-600 hover:text-red-600 transition-colors inline-flex items-center">
                        <i class="fas fa-arrow-left mr-2"></i>Back to Blog
                    </a>
                </div>

                <!-- Article Title -->
                <h1 class="text-4xl font-bold text-gray-900 mb-4 leading-tight">
                    @Model.BlogPost.Title
                </h1>

                <!-- Article Meta -->
                <div class="flex items-center justify-between border-b border-gray-200 pb-6 mb-8">
                    <div class="flex items-center space-x-6 text-sm text-gray-600">
                        <div class="flex items-center">
                            <i class="fas fa-calendar-alt mr-2"></i>
                            Published @Model.BlogPost.CreatedAt?.ToString("MMMM dd, yyyy")
                        </div>
                        @if (Model.BlogPost.UpdatedAt != Model.BlogPost.CreatedAt)
                        {
                            <div class="flex items-center">
                                <i class="fas fa-edit mr-2"></i>
                                Updated @Model.BlogPost.UpdatedAt?.ToString("MMMM dd, yyyy")
                            </div>
                        }
                    </div>
                    
                    <div class="flex items-center space-x-2">
                        <button onclick="shareArticle()" 
                                class="text-gray-600 hover:text-red-600 transition-colors p-2 rounded-full hover:bg-gray-100" 
                                title="Share Article">
                            <i class="fas fa-share-alt"></i>
                        </button>
                        <button onclick="printArticle()" 
                                class="text-gray-600 hover:text-red-600 transition-colors p-2 rounded-full hover:bg-gray-100"
                                title="Print Article">
                            <i class="fas fa-print"></i>
                        </button>
                    </div>
                </div>

                <!-- Article Content -->
                <div class="prose prose-lg max-w-none">
                    @{
                        var formattedContent = Model.BlogPost.Content.Replace("\n", "<br>");
                    }
                    @Html.Raw(formattedContent)
                </div>
            </div>
        </article>

        <!-- Related Articles -->
        @if (Model.RelatedPosts.Any())
        {
            <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-8">
                <h2 class="text-2xl font-bold text-gray-900 mb-6">Related Articles</h2>
                
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                    @foreach (var relatedPost in Model.RelatedPosts)
                    {
                        <article class="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                            <div class="mb-3">
                                @if (!string.IsNullOrEmpty(relatedPost.Category))
                                {
                                    <span class="px-2 py-1 text-xs font-medium rounded-full
                                        @(relatedPost.Category == "Health" ? "bg-green-100 text-green-800" :
                                          relatedPost.Category == "Education" ? "bg-blue-100 text-blue-800" :
                                          relatedPost.Category == "Emergency" ? "bg-red-100 text-red-800" :
                                          relatedPost.Category == "Guidelines" ? "bg-yellow-100 text-yellow-800" :
                                          relatedPost.Category == "Medical" ? "bg-purple-100 text-purple-800" :
                                          "bg-gray-100 text-gray-800")">
                                        @relatedPost.Category
                                    </span>
                                }
                            </div>
                            
                            <h3 class="text-lg font-semibold text-gray-900 mb-2 line-clamp-2">
                                <a href="/blog/@relatedPost.PostId" class="hover:text-red-600 transition-colors">
                                    @relatedPost.Title
                                </a>
                            </h3>
                            
                            <p class="text-gray-600 text-sm mb-3 line-clamp-2">
                                @{
                                    var preview = relatedPost.Content.Length > 100 
                                        ? relatedPost.Content.Substring(0, 100) + "..." 
                                        : relatedPost.Content;
                                }
                                @preview
                            </p>
                            
                            <div class="flex items-center justify-between">
                                <span class="text-xs text-gray-500">
                                    @relatedPost.CreatedAt?.ToString("MMM dd, yyyy")
                                </span>
                                <a href="/blog/@relatedPost.PostId" 
                                   class="text-red-600 hover:text-red-700 text-sm font-medium">
                                    Read More â†’
                                </a>
                            </div>
                        </article>
                    }
                </div>
            </div>
        }

        <!-- Call to Action -->
        <div class="bg-gradient-to-r from-red-600 to-red-700 rounded-lg p-8 text-white text-center">
            <h2 class="text-2xl font-bold mb-2">Ready to Make a Difference?</h2>
            <p class="text-red-100 mb-4">Your blood donation can save up to three lives. Join our community of heroes today.</p>
            @if (role.Equals("admin", StringComparison.OrdinalIgnoreCase) || role.Equals("staff", StringComparison.OrdinalIgnoreCase))
            {
                <button disabled 
                        class="inline-flex items-center px-6 py-3 bg-gray-300 text-gray-500 font-semibold rounded-lg cursor-not-allowed opacity-50">
                    <i class="fas fa-heart mr-2"></i>
                    Register to Donate
                </button>
            }
            else
            {
                <a href="/RegisterDonation" 
                   class="inline-flex items-center px-6 py-3 bg-white text-red-600 font-semibold rounded-lg hover:bg-red-50 transition-colors">
                    <i class="fas fa-heart mr-2"></i>
                    Register to Donate
                </a>
            }
        </div>
    </div>
}
else
{
    <div class="max-w-4xl mx-auto">
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-12 text-center">
            <div class="mx-auto w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mb-4">
                <i class="fas fa-exclamation-triangle text-3xl text-gray-400"></i>
            </div>
            <h2 class="text-2xl font-bold text-gray-900 mb-2">Article Not Found</h2>
            <p class="text-gray-600 mb-6">The article you're looking for is not available or has been removed.</p>
            <a href="/blog" 
               class="inline-flex items-center px-6 py-3 bg-red-600 text-white font-semibold rounded-lg hover:bg-red-700 transition-colors">
                <i class="fas fa-arrow-left mr-2"></i>
                Back to Blog
            </a>
        </div>
    </div>
}

<style>
    .prose {
        color: #374151;
        line-height: 1.75;
    }
    
    .prose h2 {
        font-size: 1.5em;
        font-weight: 700;
        margin-top: 2em;
        margin-bottom: 1em;
        color: #111827;
    }
    
    .prose h3 {
        font-size: 1.25em;
        font-weight: 600;
        margin-top: 1.6em;
        margin-bottom: 0.6em;
        color: #111827;
    }
    
    .prose p {
        margin-bottom: 1.25em;
    }
    
    .prose ul, .prose ol {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
        padding-left: 1.625em;
    }
    
    .prose li {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
    }
    
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>

<script>
    function shareArticle() {
        if (navigator.share) {
            navigator.share({
                title: '@Model.BlogPost?.Title',
                url: window.location.href
            }).catch(console.error);
        } else {
            // Fallback for browsers that don't support native sharing
            navigator.clipboard.writeText(window.location.href).then(function() {
                alert('Article URL copied to clipboard!');
            }).catch(function() {
                // Fallback if clipboard API is not available
                var tempInput = document.createElement('input');
                tempInput.value = window.location.href;
                document.body.appendChild(tempInput);
                tempInput.select();
                document.execCommand('copy');
                document.body.removeChild(tempInput);
                alert('Article URL copied to clipboard!');
            });
        }
    }
    
    function printArticle() {
        window.print();
    }
</script>
